/*============================================================================
 * @author     : Jae Yong Lee (leejaeyong7@gmail.com)
 * @file       : test.cs
 * @brief      : Event handler for trajectory create UI
 * Copyright (c) Jae Yong Lee / UIUC Fall 2016
 =============================================================================*/
//----------------------------------------------------------------------------//
//                               CLASS IMPORTS                                //
//----------------------------------------------------------------------------//
using UnityEngine;
using UnityEngine.UI;
using System.Collections;
using System.Collections.Generic;
using com.ootii.Messages;
//----------------------------------------------------------------------------//
//                             END CLASS IMPORTS                              //
//----------------------------------------------------------------------------//
//----------------------------------------------------------------------------//
//                             CLASS DEFINITIONS                              //
//----------------------------------------------------------------------------//
public class Models : MonoBehaviour
{

	//********************************************************************//
	//***************************BEGIN VARIABLES**************************//
	//********************************************************************//
	//====================================================================//
	//                    PUBLIC VARIABLE DEFINITIONS                     //
	//====================================================================//
	public List<Trajectory> Trajectories = new List<Trajectory>();
	public GameObject TrajectoryGameObject;
	public GameObject Features;
	public GameObject Surfaces;
	public GameObject Objects;
	public LineRenderer trajectoryLine;
	//====================================================================//
	//                  END PUBLIC VARIABLE DEFINITIONS                   //
	//====================================================================//
	//====================================================================//
	//                    PRIVATE VARIABLE DEFINITIONS                    //
	//====================================================================//
	public float scale;
	//====================================================================//
	//                  END PRIVATE VARIABLE DEFINITIONS                  //
	//====================================================================//
	//********************************************************************//
	//****************************END VARIABLES***************************//
	//********************************************************************//
	//********************************************************************//
	//****************************BEGIN METHODS***************************//
	//********************************************************************//
	//====================================================================//
	//                 MONOBEHAVIOR FUNCTION DEFINITIONS                  //
	//====================================================================//
	void Start()
	{
		MessageDispatcher.AddListener("SET_SCALE", setGlobalScaleHelper);
		//trajectoryLine = TrajectoryGameObject.AddComponent<LineRenderer>();
	}
	//====================================================================//
	//               END MONOBEHAVIOR FUNCTION DEFINITIONS                //
	//====================================================================//
	//====================================================================//
	//                     PUBLIC METHOD DEFINITIONS                      //
	//====================================================================//
	//====================================================================//
	//                   END PUBLIC METHOD DEFINITIONS                    //
	//====================================================================//
	//====================================================================//
	//                     PRIVATE METHOD DEFINITIONS                     //
	//====================================================================//
	void setGlobalScaleHelper(IMessage rMessage)
	{
		scale = (float)rMessage.Data;
		foreach (Transform t in Features.transform)
		{
			t.localScale = new Vector3(scale, scale, scale);
		}
		//Features.transform.localScale = new Vector3(scale, scale, scale);
		MessageDispatcher.SendMessage("TRAJECTORY_UPDATED");
	}
	//====================================================================//
	//                   END PRIVATE METHOD DEFINITIONS                   //
	//====================================================================//
	//********************************************************************//
	//*****************************END METHODS****************************//
	//********************************************************************//
	//********************************************************************//
	//******************************BEGIN ETC*****************************//
	//********************************************************************//
	//====================================================================//
	//                    HELPER FUNCTION DEFINITIONS                     //
	//====================================================================//
	//====================================================================//
	//                  END HELPER FUNCTION DEFINITIONS                   //
	//====================================================================//
	//********************************************************************//
	//*******************************END ETC******************************//
	//********************************************************************//
}
//----------------------------------------------------------------------------//
//                           END CLASS DEFINITIONS                            //
//----------------------------------------------------------------------------//